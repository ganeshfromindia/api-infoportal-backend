{"version":3,"sources":["shared/components/UIElements/Card.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/context/auth-context.js","shared/util/config.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","products/item/Product.js","products/list/ProductsList.js","traders/item/Trader.js","traders/list/TradersList.js","dashboard/admin/Admin.js","dashboard/manufacturer/Manufacturer.js","dashboard/trader/Trader.js","App.js","shared/hooks/auth-hook.js","index.js"],"names":["Card","props","React","createElement","className","concat","style","children","VALIDATOR_MINLENGTH","val","type","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","Button","href","size","inverse","danger","to","Link","exact","normal","buttonfont","maxwidth","position","onClick","disabled","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","error","Array","map","data","index","key","LoadingSpinner","asOverlay","ImageUpload","memo","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","Date","getTime","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","pickImageHandler","current","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","intitialTouched","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","includes","blob","json","filter","reqCtrl","ok","message","err","forEach","abortCtrl","abort","clearError","AuthContext","createContext","isLoggedIn","userId","userName","token","role","email","mobileNo","login","logout","image","MAIN_URL","Auth","auth","useContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","password","onSubmit","preventDefault","JSON","stringify","name","formData","FormData","append","switchModeHandler","prevMode","MainHeader","NavLinks","currentRole","setCurrentRole","NavLink","SideDrawer","MainNavigation","currentImage","setCurrentImage","currentUserName","setCurrentUserName","imagePath","replace","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","openDrawerHandler","Product","_ref","productdata","handleClose","pharmacopoeiaData","setPharmacopoeiaData","dmfData","setDMFData","animatedComponents","makeAnimated","pageData","setPageData","dmf","parse","pharmacopoeias","handleDownloadButtonClick","userData","localStorage","getItem","fileWithPath","Authorization","responseType","then","res","Blob","catch","console","log","currentFilename","split","pop","addEventListener","blobString","link","setAttribute","appendChild","title","description","price","coa","msds","cep","qos","impurities","refStandards","toLowerCase","word","charAt","toUpperCase","slice","join","prev","product","e","Select","defaultValue","maxMenuHeight","closeMenuOnSelect","components","isMulti","options","selectedLabel","formatOptionLabel","option","_ref2","context","ProductsList","open","setOpen","loadedProducts","setLoadedProducts","productData","setProductData","loading","setLoading","totalRows","setTotalRows","perPage","setPerPage","currentPage","setCurrentPage","allowAddProduct","setAllowAddProduct","subHeaderComponent","fetchManufacturerDashboardData","manufacturer","fetchProducts","page","products","total","handleDeleteButtonClick","handleEditButtonClick","handleOpen","columns","useMemo","selector","row","serialNo","width","cell","ignoreRowClick","allowOverflow","button","sortable","right","dmfHTML","aria-label","$event","traders","DataTable","progressPending","pagination","paginationServer","paginationTotalRows","onChangeRowsPerPage","newPerPage","onChangePage","paginationDefaultPage","paginationPerPage","subHeader","Trader","traderData","renderAfterCalled","defaultProducts","setDefaultProducts","traderInfo","setTraderInfo","defaultProductsArray","selectProductData","object","tpa","_id","i","flags","output","l","handleMultiProductSelect","selectedProducts","address","handleCloseInfo","folder","username","trader","_ref3","TradersList","renderAfterCalledFP","openP","setOpenP","traderId","setTraderId","loadedTraders","setLoadedTraders","setTraderData","totalRowsP","setTotalRowsP","manfProducts","setManfProducts","fetchTraders","fetchProductsManf","handleOpenP","handleCloseP","handleProductsDetailButtonClick","columnsP","DashboardAdmin","loadedManufacturers","setLoadedManufacturers","totalRowsTrader","setTotalRowsTrader","totalRowsManufacturer","setTotalRowsManufacturer","perPageM","setPerPageM","currentPageM","setCurrentPageM","perPageT","setPerPageT","currentPageT","setCurrentPageT","currentTab","setCurrentTab","fetchManufacturers","manufacturers","handleDeleteTraderButtonClick","handleDeleteManufacturerButtonClick","columnsTrader","listing","columnsManufacturer","handleCurrentTab","presentTab","DashboardManufacturer","manufacturerData","setManufacturerData","DashboardTrader","fetchTraderDashboardData","traderDashboard","App","useAuth","setToken","setUserId","setUserName","setEmail","setMobileNo","setRole","setImage","uid","expirationDate","setItem","removeItem","storedData","currentTokenState","setCurrentTokenState","routes","Switch","Route","path","render","Redirect","Provider","Router"],"mappings":"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","file":"static/js/main.4d9af303.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n        isTouched: false,\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid, isTouched } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid, isTouched);\n  }, [id, value, isValid, onInput, isTouched]);\n\n  useEffect(() => {\n    if (props.initialValue) {\n      onInput(props.id, props.initialValue, true, false);\n    }\n  }, [props.id, props.initialValue, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" && props.type !== \"password\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : props.element === \"input\" && props.type === \"password\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"} ${props.normal} ${\n        props.buttonfont\n      } ${props.maxwidth} ${props.position}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal modal-container ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      {/* <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      > */}\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      {/* </form> */}\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error && props && props.error && props.error.length > 0}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      {props && props.error && !(props.error instanceof Array) && (\n        <p>{props.error}</p>\n      )}\n      {props &&\n        props.error &&\n        props.error.length > 0 &&\n        props.error instanceof Array &&\n        props.error.map((data, index) => <p key={index}>{data}</p>)}\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useRef, useState, useEffect, memo } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = memo((props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  useEffect(() => {\n    if (props && props.data) {\n      setPreviewUrl(\n        \"http://localhost:5000/\" + props.data + `?${new Date().getTime()}`\n        // \"http://api.infoportal.co.in/\" + props.data + `?${new Date().getTime()}`\n      );\n      props.onInput(props.id, props.data, true);\n    }\n  }, []);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg,.pdf\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {/* {!previewUrl && (\n            <img src={\"http://localhost:5000/\" + props.data} alt=\"Preview\" />\n          )} */}\n          {/* {!previewUrl && <p>Please pick an file.</p>} */}\n        </div>\n        <Button\n          type=\"button\"\n          normal=\"normal-button\"\n          buttonfont=\"button-font\"\n          maxwidth=\"max-width-fit-cont\"\n          onClick={pickImageHandler}\n        >\n          Pick File\n        </Button>\n      </div>\n      {!isValid && props.data == null && <p>{props.errorText}</p>}\n    </div>\n  );\n});\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid, isTouched: action.isTouched }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity, intitialTouched) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n    isTouched: intitialTouched\n  });\n\n  const inputHandler = useCallback((id, value, isValid, isTouched) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id,\n      isTouched: isTouched\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState([]);\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n          // withCredentials: true,\n          // credentials: \"include\",\n        });\n        let responseData;\n        if (url.includes(\"download\")) {\n          responseData = response.blob();\n        } else {\n          responseData = await response.json();\n        }\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw responseData.message;\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  userName: null,\n  token: null,\n  role: null,\n  email: null,\n  mobileNo: null,\n  login: () => {},\n  logout: () => {},\n  image: null,\n});\n","// export const MAIN_URL = \"https://api-infoportal.adaptable.app\"\r\nexport const MAIN_URL = \"http://localhost:5000\";\r\n// export const MAIN_URL = \"http://api.infoportal.co.in/\";\r\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\nimport { MAIN_URL } from \"../../shared/util/config\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n        isTouched: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n        isTouched: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n          mobileNo: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n            isTouched: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n            isTouched: false,\n          },\n          mobileNo: {\n            value: null,\n            isValid: false,\n            isTouched: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${MAIN_URL}/api/users/login`,\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n        auth.login(\n          responseData.userId,\n          responseData.token,\n          responseData.name,\n          responseData.mobileNo,\n          responseData.role,\n          responseData.email,\n          responseData.image\n        );\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\n          \"folder\",\n          \"Manufacturers/\" + formState.inputs.name.value + \"/Users\"\n        );\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"mobileNo\", formState.inputs.mobileNo.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const responseData = await sendRequest(\n          `${MAIN_URL}/api/users/signup`,\n          \"POST\",\n          formData\n        );\n        auth.login(\n          responseData.userId,\n          responseData.token,\n          responseData.name,\n          responseData.mobileNo,\n          responseData.role,\n          responseData.email,\n          responseData.image\n        );\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {/* <div className=\"background\">\n        <div className=\"shape\"></div>\n        <div className=\"shape\"></div>\n      </div> */}\n      {isLoading && <LoadingSpinner asOverlay />}\n      {!isLoading && (\n        <div className=\"authentication-container\">\n          <Card className=\"authentication\">\n            <form onSubmit={authSubmitHandler}>\n              <h3>{isLoginMode ? \"Login here\" : \"Please SignUp\"}</h3>\n              {!isLoginMode && (\n                <Input\n                  element=\"input\"\n                  id=\"name\"\n                  type=\"text\"\n                  label=\"Your Name\"\n                  validators={[]}\n                  errorText=\"Please enter a name.\"\n                  onInput={inputHandler}\n                />\n              )}\n              {!isLoginMode && (\n                <ImageUpload\n                  center\n                  id=\"image\"\n                  onInput={inputHandler}\n                  errorText=\"Please provide an image.\"\n                />\n              )}\n              <Input\n                element=\"input\"\n                id=\"email\"\n                type=\"text\"\n                label=\"E-Mail\"\n                validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n                errorText=\"Please enter a valid email address.\"\n                onInput={inputHandler}\n              />\n              <Input\n                element=\"input\"\n                id=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)]}\n                errorText=\"Please enter a valid password, at least 6 characters.\"\n                onInput={inputHandler}\n              />\n              {!isLoginMode && (\n                <Input\n                  element=\"input\"\n                  id=\"mobileNo\"\n                  type=\"text\"\n                  label=\"Mobile No\"\n                  validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(10)]}\n                  errorText=\"Please enter a valid mobile no, at least 10 characters.\"\n                  onInput={inputHandler}\n                />\n              )}\n              <Button type=\"submit\" disabled={!formState.isValid}>\n                {isLoginMode ? \"Login\" : \"Sign Up\"}\n              </Button>\n            </form>\n            <Button position=\"top\" inverse onClick={switchModeHandler}>\n              Switch To {isLoginMode ? \"Sign Up\" : \"Login\"}\n            </Button>\n          </Card>\n          <div className=\"photo_by inside_parts\">\n            Photo by{\" \"}\n            <a href=\"https://picjumbo.com/author/viktorhanacek/\">\n              Viktor Hanacek\n            </a>{\" \"}\n            from <a href=\"https://picjumbo.com\">picjumbo.com</a>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n  const [currentRole, setCurrentRole] = useState();\n\n  useEffect(() => {\n    setCurrentRole(auth.role);\n  }, [auth]);\n  return (\n    <ul className=\"nav-links\">\n      {auth.isLoggedIn && currentRole === \"Manufacturer\" && (\n        <li>\n          <NavLink to={`/products`}>\n            <button\n              type=\"button\"\n              className=\"button button--default button--inverse\"\n            >\n              Products\n            </button>\n          </NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && currentRole === \"Manufacturer\" && (\n        <li>\n          <NavLink to=\"/traders\">\n            <button\n              type=\"button\"\n              className=\"button button--default button--inverse\"\n            >\n              Traders\n            </button>\n          </NavLink>\n        </li>\n      )}\n      {/* {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )} */}\n      {auth.isLoggedIn && (\n        <li>\n          <button\n            onClick={auth.logout}\n            className=\"button button--default button--inverse\"\n          >\n            Logout\n          </button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport \"./MainNavigation.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth-context\";\n\nconst MainNavigation = (props) => {\n  const [currentRole, setCurrentRole] = useState();\n  const [currentImage, setCurrentImage] = useState();\n  const [currentUserName, setCurrentUserName] = useState();\n\n  const auth = useContext(AuthContext);\n\n  useEffect(() => {\n    let imagePath;\n    setCurrentRole(auth.role);\n    setCurrentUserName(auth.userName);\n    if (auth.image) {\n      imagePath = \"http://localhost:5000/\" + auth.image.replace(/\\\\/g, \"/\");\n      // imagePath =\n      //   \"http://api.infoportal.co.in/\" + auth.image.replace(/\\\\/g, \"/\");\n      setCurrentImage(imagePath);\n    }\n  }, [auth]);\n\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  // const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      {currentRole && (\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n          <nav className=\"main-navigation__drawer-nav\">\n            <h1 className=\"main-navigation__title\">\n              {currentRole && currentRole === \"Manufacturer\" ? (\n                <NavLink to=\"/dashboardManufacturer\">\n                  <img src={currentImage} alt={currentUserName} />\n                </NavLink>\n              ) : null}\n              {currentRole && currentRole === \"Admin\" ? (\n                <NavLink to=\"/dashboardAdmin\">\n                  <img src={currentImage} alt={currentUserName} />\n                </NavLink>\n              ) : null}\n              {currentRole && currentRole === \"Trader\" ? (\n                <NavLink to=\"/dashboardTrader\">\n                  <img src={currentImage} alt={currentUserName} />\n                </NavLink>\n              ) : null}\n            </h1>\n            <NavLinks />\n          </nav>\n        </SideDrawer>\n      )}\n      {currentRole && (\n        <MainHeader>\n          <button\n            className=\"main-navigation__menu-btn\"\n            onClick={openDrawerHandler}\n          >\n            <span />\n            <span />\n            <span />\n          </button>\n          {currentRole && (\n            <h1 className=\"main-navigation__title large_screen\">\n              {currentRole && currentRole === \"Manufacturer\" ? (\n                <NavLink to=\"/dashboardManufacturer\">\n                  <img src={currentImage} alt={currentUserName} />\n                </NavLink>\n              ) : null}\n              {currentRole && currentRole === \"Admin\" ? (\n                <NavLink to=\"/dashboardAdmin\">\n                  <img src={currentImage} alt={currentUserName} />\n                </NavLink>\n              ) : null}\n              {currentRole && currentRole === \"Trader\" ? (\n                <NavLink to=\"/dashboardTrader\">\n                  <img src={currentImage} alt={currentUserName} />\n                </NavLink>\n              ) : null}\n            </h1>\n          )}\n          <nav className=\"main-navigation__header-nav\">\n            <NavLinks />\n          </nav>\n        </MainHeader>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./Product.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { MAIN_URL } from \"../../shared/util/config\";\r\n\r\nconst Product = ({ productdata, handleClose }) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [pharmacopoeiaData, setPharmacopoeiaData] = useState([]);\r\n  const [dmfData, setDMFData] = useState([]);\r\n  const animatedComponents = makeAnimated();\r\n  const [pageData, setPageData] = useState();\r\n\r\n  useEffect(() => {\r\n    if (productdata) {\r\n      if (productdata.dmf.length > 0) setDMFData(JSON.parse(productdata.dmf));\r\n      if (productdata.pharmacopoeias.length > 0)\r\n        setPharmacopoeiaData(JSON.parse(productdata.pharmacopoeias));\r\n      setPageData(productdata);\r\n    }\r\n  }, [productdata]);\r\n\r\n  const optionsPharamacopoeia = [\r\n    { value: \"IP\", label: \"Indian Pharmacopoeia\", selectedLabel: \"IP\" },\r\n    { value: \"BP\", label: \"British Pharmacopoeia\", selectedLabel: \"BP\" },\r\n    { value: \"USP\", label: \"US Pharmacopoeia\", selectedLabel: \"USP\" },\r\n    { value: \"JP\", label: \"Japanese Pharmacopoeia\", selectedLabel: \"JP\" },\r\n    { value: \"EP\", label: \"European Pharmacopoeia\", selectedLabel: \"EP\" },\r\n    { value: \"InHouse\", label: \"In House\", selectedLabel: \"In House\" },\r\n  ];\r\n\r\n  const optionsDMF = [\r\n    { value: \"USDMF\", label: \"US DMF\" },\r\n    { value: \"BRAZILDMF\", label: \"Brazilian DMF\" },\r\n    { value: \"KOREADMF\", label: \"Korean DMF\" },\r\n    { value: \"EUDMF\", label: \"European DMF\" },\r\n    { value: \"RUSSIANDMF\", label: \"Russian DMF\" },\r\n    { value: \"NA\", label: \"Not Available\" },\r\n  ];\r\n\r\n  const renameProduct = (product) => {\r\n    return product\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \")\r\n      .trim();\r\n  };\r\n\r\n  const productSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setPageData(null);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\r\n        \"folder\",\r\n        \"Manufacturers/\" +\r\n          auth.userName +\r\n          \"/Products/\" +\r\n          renameProduct(formState.inputs.title.value)\r\n      );\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"price\", formState.inputs.price.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      formData.append(\"coa\", formState.inputs.coa.value);\r\n      formData.append(\"msds\", formState.inputs.msds.value);\r\n      formData.append(\"cep\", formState.inputs.cep.value);\r\n      formData.append(\"qos\", formState.inputs.qos.value);\r\n      formData.append(\"dmf\", JSON.stringify(dmfData));\r\n      formData.append(\"impurities\", formState.inputs.impurities.value);\r\n      formData.append(\"refStandards\", formState.inputs.refStandards.value);\r\n      formData.append(\"pharmacopoeias\", JSON.stringify(pharmacopoeiaData));\r\n      if (productdata && productdata.id) {\r\n        const responseData = await sendRequest(\r\n          `${MAIN_URL}/api/products/${productdata.id}`,\r\n          \"PATCH\",\r\n          formData,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setPageData((prev) => responseData.product);\r\n      } else {\r\n        const responseData = await sendRequest(\r\n          `${MAIN_URL}/api/products/create`,\r\n          \"POST\",\r\n          formData,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setPageData(responseData.product);\r\n      }\r\n      handleClose();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleMultiPharmacopoeiaSelect = (options) => {\r\n    setPharmacopoeiaData(options);\r\n  };\r\n\r\n  const handleMultiDMFSelect = (options) => {\r\n    setDMFData(options);\r\n  };\r\n\r\n  const handleDownloadButtonClick = useCallback(\r\n    (event) => {\r\n      const fileReader = new FileReader();\r\n      let userData = localStorage.getItem(\"userData\");\r\n      let fileWithPath = event.target.value;\r\n      sendRequest(\r\n        `${MAIN_URL}/api/download?file=${fileWithPath}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + JSON.parse(userData).token,\r\n          responseType: \"blob\",\r\n        }\r\n      )\r\n        .then((res) => {\r\n          fileReader.readAsDataURL(new Blob([res]));\r\n        })\r\n        .catch((err) => console.log(err));\r\n      let currentFilename = fileWithPath.split(\"/\").pop();\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const blobString = fileReader.result;\r\n        const link = document.createElement(\"a\");\r\n        link.href = blobString;\r\n        link.setAttribute(\"download\", currentFilename);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      });\r\n    },\r\n    [sendRequest]\r\n  );\r\n\r\n  const [formState, inputHandler] = useForm({\r\n    title: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    price: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    image: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    coa: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    msds: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    cep: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    qos: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    dmf: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    impurities: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    refStandards: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    pharmacopoeias: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && pageData && (\r\n        <form className=\"place-form\" onSubmit={productSubmitHandler}>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={pageData && pageData.title}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (at least 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={pageData && pageData.description}\r\n          />\r\n          <Input\r\n            id=\"price\"\r\n            element=\"input\"\r\n            label=\"price\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a price.\"\r\n            onInput={inputHandler}\r\n            initialValue={pageData && pageData.price}\r\n          />\r\n          <ImageUpload\r\n            id=\"image\"\r\n            onInput={inputHandler}\r\n            errorText=\"Please provide an product image.\"\r\n            data={(pageData && pageData.image) || null}\r\n          />\r\n          {pageData && pageData.image ? (\r\n            <button\r\n              type=\"button\"\r\n              value={pageData.image}\r\n              onClick={(e) => handleDownloadButtonClick(e)}\r\n            >\r\n              Download Product Image\r\n            </button>\r\n          ) : null}\r\n          <ImageUpload\r\n            id=\"coa\"\r\n            onInput={inputHandler}\r\n            errorText=\"Please provide sample COA.\"\r\n            data={(pageData && pageData.coa) || null}\r\n          />\r\n          {pageData && pageData.coa ? (\r\n            <button\r\n              type=\"button\"\r\n              value={pageData.coa}\r\n              onClick={(e) => handleDownloadButtonClick(e)}\r\n            >\r\n              Download COA\r\n            </button>\r\n          ) : null}\r\n          <ImageUpload\r\n            id=\"msds\"\r\n            onInput={inputHandler}\r\n            errorText=\"Please provide an MSDS.\"\r\n            data={(pageData && pageData.msds) || null}\r\n          />\r\n\r\n          {pageData && pageData.msds ? (\r\n            <button\r\n              type=\"button\"\r\n              value={pageData.msds}\r\n              onClick={(e) => handleDownloadButtonClick(e)}\r\n            >\r\n              Download MSDS\r\n            </button>\r\n          ) : null}\r\n          <ImageUpload\r\n            id=\"cep\"\r\n            onInput={inputHandler}\r\n            errorText=\"Please provide a Certificate of Suitability.\"\r\n            data={(pageData && pageData.cep) || null}\r\n          />\r\n          {pageData && pageData.cep ? (\r\n            <button\r\n              type=\"button\"\r\n              value={pageData.cep}\r\n              onClick={(e) => handleDownloadButtonClick(e)}\r\n            >\r\n              Download Certificate of Suitability\r\n            </button>\r\n          ) : null}\r\n          <ImageUpload\r\n            id=\"qos\"\r\n            onInput={inputHandler}\r\n            errorText=\"Please provide an Quality Overall Summary.\"\r\n            data={(pageData && pageData.qos) || null}\r\n          />\r\n          {pageData && pageData.qos ? (\r\n            <button\r\n              type=\"button\"\r\n              value={pageData.qos}\r\n              onClick={(e) => handleDownloadButtonClick(e)}\r\n            >\r\n              Download Quality Overall Summary\r\n            </button>\r\n          ) : null}\r\n          <Input\r\n            id=\"impurities\"\r\n            element=\"textarea\"\r\n            label=\"Impurities\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter Impurities separated by comma.\"\r\n            onInput={inputHandler}\r\n            initialValue={pageData && pageData.impurities}\r\n          />\r\n          <Input\r\n            id=\"refStandards\"\r\n            element=\"textarea\"\r\n            label=\"Reference Standards\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter Reference Standards separated by comma.\"\r\n            onInput={inputHandler}\r\n            initialValue={pageData && pageData.refStandards}\r\n          />\r\n          <Select\r\n            defaultValue={\r\n              pageData &&\r\n              pageData.dmf &&\r\n              pageData.dmf.length > 0 && [...JSON.parse(pageData.dmf)]\r\n            }\r\n            maxMenuHeight={150}\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            options={optionsDMF}\r\n            placeholder=\"Select DMF\"\r\n            onChange={handleMultiDMFSelect}\r\n          />\r\n          <div className=\"height25\"></div>\r\n          <Select\r\n            defaultValue={\r\n              pageData &&\r\n              pageData.pharmacopoeias &&\r\n              pageData.pharmacopoeias.length > 0 && [\r\n                ...JSON.parse(pageData.pharmacopoeias),\r\n              ]\r\n            }\r\n            maxMenuHeight={100}\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            options={optionsPharamacopoeia}\r\n            placeholder=\"Select Pharmacopoeia\"\r\n            onChange={handleMultiPharmacopoeiaSelect}\r\n            formatOptionLabel={(option, { context }) => {\r\n              /* context can be either `menu` or `value`\r\n                menu - dropdown\r\n                value - value displayed\r\n              */\r\n              return context === \"value\" ? option.selectedLabel : option.label;\r\n            }}\r\n          />\r\n          <div className=\"height25\"></div>\r\n          <Button\r\n            type=\"submit\"\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n            disabled={!formState.isValid}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, {\r\n  useMemo,\r\n  useState,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n} from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport \"./ProductsList.css\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Product from \"../item/Product\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { MAIN_URL } from \"../../shared/util/config\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst ProductsList = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [loadedProducts, setLoadedProducts] = useState([]);\r\n  const [productData, setProductData] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [allowAddProduct, setAllowAddProduct] = useState(false);\r\n  const subHeader = true;\r\n  const subHeaderComponent = (\r\n    <div className=\"header-cont\">\r\n      <div className=\"sub-header\"></div>\r\n      <div className=\"last-column\">Pharmacopoeias</div>\r\n    </div>\r\n  );\r\n\r\n  const fetchManufacturerDashboardData = useCallback(async () => {\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/api/manufacturers/${auth.userId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      if (response.manufacturer && response.manufacturer.length > 0) {\r\n        setAllowAddProduct(true);\r\n      } else {\r\n        setAllowAddProduct(false);\r\n      }\r\n    } catch (err) {}\r\n  }, [auth.token, auth.userId, sendRequest]);\r\n\r\n  const fetchProducts = useCallback(\r\n    async (page) => {\r\n      if (auth.userId) {\r\n        setLoading(true);\r\n        try {\r\n          const response = await sendRequest(\r\n            `${MAIN_URL}/api/products/manufacturer/id?uid=${auth.userId}&page=${page}&size=${perPage}&delay=1`,\r\n            \"GET\",\r\n            null,\r\n            { Authorization: \"Bearer \" + auth.token }\r\n          );\r\n          setLoadedProducts((prev) => {\r\n            return response.products;\r\n          });\r\n          setTotalRows(response.total);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    },\r\n    [perPage, sendRequest, auth]\r\n  );\r\n\r\n  const handleDownloadButtonClick = useCallback(\r\n    (data) => {\r\n      const fileReader = new FileReader();\r\n      let fileWithPath = data.target.id;\r\n      sendRequest(\r\n        `${MAIN_URL}/api/download?file=${fileWithPath}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          responseType: \"blob\",\r\n        }\r\n      )\r\n        .then((res) => {\r\n          fileReader.readAsDataURL(new Blob([res]));\r\n        })\r\n        .catch((err) => console.log(err));\r\n      let currentFilename = fileWithPath.split(\"/\").pop();\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const blobString = fileReader.result;\r\n        const link = document.createElement(\"a\");\r\n        link.href = blobString;\r\n        link.setAttribute(\"download\", currentFilename);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      });\r\n    },\r\n    [sendRequest, auth]\r\n  );\r\n\r\n  const handleDeleteButtonClick = useCallback(\r\n    async (data) => {\r\n      let id = JSON.parse(data.target.value).id;\r\n      try {\r\n        if (id) {\r\n          await sendRequest(`${MAIN_URL}/api/products/${id}`, \"DELETE\", null, {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          });\r\n          fetchProducts(1);\r\n        }\r\n      } catch (err) {}\r\n    },\r\n    [sendRequest, auth, fetchProducts]\r\n  );\r\n\r\n  const handleEditButtonClick = (data) => {\r\n    setOpen(true);\r\n    setProductData(JSON.parse(data.target.value));\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    fetchProducts(page);\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    let userData = localStorage.getItem(\"userData\");\r\n    let userId = JSON.parse(userData).userId;\r\n    setLoading(true);\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/api/products/manufacturer/id?uid=${userId}&page=${page}&size=${newPerPage}&delay=1`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setLoadedProducts(response.products);\r\n      setPerPage(newPerPage);\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handleOpen = (product, e) => {\r\n    e.preventDefault();\r\n    setProductData(product);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setProductData(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"SN\",\r\n        selector: (row) => row.serialNo,\r\n        width: \"60px\",\r\n      },\r\n      {\r\n        cell: (row) => (\r\n          <button onClick={handleEditButtonClick} value={JSON.stringify(row)}>\r\n            Edit\r\n          </button>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n        name: \"Action\",\r\n      },\r\n      {\r\n        cell: (row) => (\r\n          <button onClick={handleDeleteButtonClick} value={JSON.stringify(row)}>\r\n            Delete\r\n          </button>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n        name: \"Action\",\r\n      },\r\n      {\r\n        name: \"Product\",\r\n        selector: (row) => row.title,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"200px\",\r\n      },\r\n      {\r\n        name: \"Description\",\r\n        selector: (row) => row.description,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"200px\",\r\n      },\r\n      {\r\n        name: \"Price\",\r\n        selector: (row) => row.price,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"COA\",\r\n        cell: (row) => {\r\n          if (row.coa) {\r\n            return (\r\n              <button\r\n                onClick={handleDownloadButtonClick}\r\n                value={JSON.stringify(row)}\r\n                id={row.coa}\r\n              >\r\n                {\" \"}\r\n                Download{\" \"}\r\n              </button>\r\n            );\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"MSDS\",\r\n        cell: (row) => {\r\n          if (row.msds) {\r\n            return (\r\n              <button\r\n                onClick={handleDownloadButtonClick}\r\n                value={JSON.stringify(row)}\r\n                id={row.msds}\r\n              >\r\n                {\" \"}\r\n                Download{\" \"}\r\n              </button>\r\n            );\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"CEP\",\r\n        cell: (row) => {\r\n          if (row.cep) {\r\n            return (\r\n              <button\r\n                onClick={handleDownloadButtonClick}\r\n                value={JSON.stringify(row)}\r\n                id={row.cep}\r\n              >\r\n                {\" \"}\r\n                Download{\" \"}\r\n              </button>\r\n            );\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"QOS\",\r\n        cell: (row) => {\r\n          if (row.qos) {\r\n            return (\r\n              <button\r\n                onClick={handleDownloadButtonClick}\r\n                value={JSON.stringify(row)}\r\n                id={row.qos}\r\n              >\r\n                {\" \"}\r\n                Download{\" \"}\r\n              </button>\r\n            );\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"DMF\",\r\n        cell: (row) => {\r\n          if (JSON.parse(JSON.stringify(row.dmf).length > 0)) {\r\n            let dmfHTML = JSON.parse(row.dmf).map((data) => data.label);\r\n            dmfHTML = dmfHTML.map((data, index) => (\r\n              <div key={index}>{data}</div>\r\n            ));\r\n            dmfHTML = (\r\n              <div className=\"list-dmf-container scroller\">{dmfHTML}</div>\r\n            );\r\n            return dmfHTML;\r\n          } else {\r\n            return \"No\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"IP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"IP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"BP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"BP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"EP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"EP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"JP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"JP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"USP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"USP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"In House\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\r\n              \"InHouse\"\r\n            )\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n    ],\r\n    [handleDownloadButtonClick, handleDeleteButtonClick]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchProducts(1);\r\n  }, [fetchProducts]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      fetchProducts(1);\r\n    }\r\n  }, [open, fetchProducts]);\r\n\r\n  useEffect(() => {\r\n    if (auth.userId) {\r\n      fetchManufacturerDashboardData();\r\n    }\r\n  }, [fetchManufacturerDashboardData, auth.userId]);\r\n\r\n  if (!allowAddProduct) {\r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"place-list center\">\r\n          <Card className=\"card-product\">\r\n            <h2>\r\n              Please fill the Manufacturer's details in dashboard. So as to add\r\n              products\r\n            </h2>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  if (loadedProducts?.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"place-list center\">\r\n          <Card className=\"card-product\">\r\n            <h2>No products found</h2>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={($event) =>\r\n                handleOpen(\r\n                  {\r\n                    title: \"\",\r\n                    description: \"\",\r\n                    price: \"\",\r\n                    image: \"\",\r\n                    coa: \"\",\r\n                    msds: \"\",\r\n                    cep: \"\",\r\n                    qos: \"\",\r\n                    impurities: \"\",\r\n                    refStandards: \"\",\r\n                    dmf: [],\r\n                    pharmacopoeias: [],\r\n                    id: \"\",\r\n                    manufacturer: \"\",\r\n                    traders: [],\r\n                  },\r\n                  $event\r\n                )\r\n              }\r\n              normal=\"normal-button\"\r\n              buttonfont=\"button-font\"\r\n              maxwidth=\"max-width-fit-cont\"\r\n            >\r\n              Add Product\r\n            </Button>\r\n            <Modal\r\n              show={open}\r\n              onCancel={handleClose}\r\n              header=\"Add Product\"\r\n              contentClass=\"place-item__modal-content\"\r\n              footerClass=\"place-item__modal-actions abc\"\r\n              footer={\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  normal=\"normal-button\"\r\n                  buttonfont=\"button-font\"\r\n                  maxwidth=\"max-width-fit-cont\"\r\n                >\r\n                  CLOSE\r\n                </Button>\r\n              }\r\n            >\r\n              <div className=\"map-container\">\r\n                <Product\r\n                  productdata={productData}\r\n                  handleClose={handleClose}\r\n                ></Product>\r\n              </div>\r\n            </Modal>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && (\r\n        <Card className=\"card-product place-list center\">\r\n          <Button\r\n            type=\"button\"\r\n            onClick={($event) =>\r\n              handleOpen(\r\n                {\r\n                  title: \"\",\r\n                  description: \"\",\r\n                  price: \"\",\r\n                  image: \"\",\r\n                  coa: \"\",\r\n                  msds: \"\",\r\n                  cep: \"\",\r\n                  qos: \"\",\r\n                  impurities: \"\",\r\n                  refStandards: \"\",\r\n                  dmf: [],\r\n                  pharmacopoeias: [],\r\n                  id: \"\",\r\n                  manufacturer: \"\",\r\n                  traders: [],\r\n                },\r\n                $event\r\n              )\r\n            }\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n          >\r\n            Add Product\r\n          </Button>\r\n        </Card>\r\n      )}\r\n      {loadedProducts && !isLoading && (\r\n        <>\r\n          <DataTable\r\n            columns={columns}\r\n            data={loadedProducts}\r\n            progressPending={loading}\r\n            pagination\r\n            paginationServer\r\n            paginationTotalRows={totalRows}\r\n            onChangeRowsPerPage={handlePerRowsChange}\r\n            onChangePage={handlePageChange}\r\n            paginationDefaultPage={currentPage}\r\n            paginationPerPage={perPage}\r\n            subHeaderComponent={subHeaderComponent}\r\n            subHeader={subHeader}\r\n          ></DataTable>\r\n          <Modal\r\n            show={open}\r\n            onCancel={handleClose}\r\n            header={(productData && productData.title) || \"Add Product\"}\r\n            contentClass=\"place-item__modal-content\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={\r\n              <Button\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n                normal=\"normal-button\"\r\n                buttonfont=\"button-font\"\r\n                maxwidth=\"max-width-fit-cont\"\r\n              >\r\n                CLOSE\r\n              </Button>\r\n            }\r\n          >\r\n            <div className=\"map-container\">\r\n              <Product\r\n                productdata={productData}\r\n                handleClose={handleClose}\r\n              ></Product>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_EMAIL,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./Trader.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { MAIN_URL } from \"../../shared/util/config\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\n\r\nconst Trader = ({ traderData, handleClose }) => {\r\n  const renderAfterCalled = useRef(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedProducts, setLoadedProducts] = useState();\r\n  const [defaultProducts, setDefaultProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [productData, setProductData] = useState();\r\n  const auth = useContext(AuthContext);\r\n  const animatedComponents = makeAnimated();\r\n  const [open, setOpen] = useState(false);\r\n  const [traderInfo, setTraderInfo] = useState();\r\n\r\n  let defaultProductsArray = [];\r\n\r\n  useEffect(() => {\r\n    if (traderData) {\r\n      setProductData(JSON.parse(JSON.stringify(traderData.products)));\r\n    }\r\n  }, [traderData]);\r\n\r\n  const fetchProducts = useCallback(\r\n    async (page) => {\r\n      try {\r\n        const response = await sendRequest(\r\n          `${MAIN_URL}/api/products/manufacturer/id?uid=${\r\n            auth.userId\r\n          }&page=${page}&size=${1000}&delay=1`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        const selectProductData = response.products.map((object) => ({\r\n          ...object,\r\n          label: object.title,\r\n          value: object.title,\r\n        }));\r\n        setLoadedProducts(selectProductData);\r\n        if (traderData && selectProductData) {\r\n          let traderProductsArray = traderData &&\r\n            traderData.products &&\r\n            traderData.products.length > 0 && [\r\n              ...JSON.parse(JSON.stringify(traderData.products)),\r\n            ];\r\n          traderProductsArray.forEach((tpa) =>\r\n            defaultProductsArray.push(\r\n              selectProductData.filter((data) => data._id === tpa)[0]\r\n            )\r\n          );\r\n          let flags = [];\r\n          let output = [];\r\n          let l = defaultProductsArray.length,\r\n            i;\r\n          for (i = 0; i < l; i++) {\r\n            if (flags[defaultProductsArray[i].id]) continue;\r\n            flags[defaultProductsArray[i].id] = true;\r\n            output.push(defaultProductsArray[i]);\r\n          }\r\n          setDefaultProducts(output);\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    [sendRequest, auth, defaultProductsArray, traderData]\r\n  );\r\n\r\n  const traderSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = {\r\n        title: formState.inputs.title.value,\r\n        email: formState.inputs.email.value,\r\n        address: formState.inputs.address.value,\r\n        products: JSON.stringify(productData),\r\n        folder:\r\n          \"Manufacturers/\" +\r\n          auth.userName +\r\n          \"/Traders/\" +\r\n          formState.inputs.title.value,\r\n      };\r\n      if (traderData && traderData.id) {\r\n        await sendRequest(\r\n          `${MAIN_URL}/api/traders/${traderData.id}`,\r\n          \"PATCH\",\r\n          JSON.stringify(formData),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n      } else {\r\n        const responseData = await sendRequest(\r\n          `${MAIN_URL}/api/traders/create`,\r\n          \"POST\",\r\n          JSON.stringify(formData),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        setOpen(true);\r\n        setTraderInfo({\r\n          username: \"Username is \" + responseData.trader.email,\r\n          password: \"And Password is \" + responseData.password,\r\n        });\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handleMultiProductSelect = (options) => {\r\n    if (options) {\r\n      const selectedProducts = options.map((data) => data._id);\r\n      setProductData(selectedProducts);\r\n    }\r\n  };\r\n\r\n  const [formState, inputHandler] = useForm({\r\n    title: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    address: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n    products: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!renderAfterCalled.current) {\r\n      fetchProducts(1);\r\n    }\r\n    renderAfterCalled.current = true;\r\n  }, [fetchProducts]);\r\n\r\n  const handleCloseInfo = () => {\r\n    setOpen(false);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && (\r\n        <form className=\"place-form\" onSubmit={traderSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={traderData && traderData.title}\r\n          />\r\n          <Input\r\n            id=\"email\"\r\n            element=\"textarea\"\r\n            label=\"Email\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email.\"\r\n            onInput={inputHandler}\r\n            initialValue={traderData && traderData.email}\r\n          />\r\n          <Input\r\n            id=\"address\"\r\n            element=\"address\"\r\n            label=\"address\"\r\n            errorText=\"Please enter a address.\"\r\n            onInput={inputHandler}\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            initialValue={traderData && traderData.address}\r\n          />\r\n          {loadedProducts && defaultProducts && !loading && (\r\n            <Select\r\n              defaultValue={defaultProducts}\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              isMulti\r\n              options={loadedProducts}\r\n              placeholder=\"Select Products\"\r\n              onChange={handleMultiProductSelect}\r\n              formatOptionLabel={(option, { context }) => {\r\n                /* context can be either `menu` or `value`\r\n                  menu - dropdown\r\n                  value - value displayed\r\n                */\r\n                return context === \"value\" ? option.value : option.label;\r\n              }}\r\n            />\r\n          )}\r\n          {loadedProducts && defaultProducts && loading && (\r\n            <Select\r\n              defaultValue={defaultProducts}\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              isMulti\r\n              options={loadedProducts}\r\n              placeholder=\"Select Products\"\r\n              onChange={handleMultiProductSelect}\r\n              formatOptionLabel={(option, { context }) => {\r\n                // /* context can be either `menu` or `value`\r\n                //   menu - dropdown\r\n                //   value - value displayed\r\n                // */\r\n                return context === \"value\" ? option.value : option.label;\r\n              }}\r\n            />\r\n          )}\r\n          <div className=\"height25\"></div>\r\n          <Button\r\n            type=\"submit\"\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n            disabled={!formState.isValid}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </form>\r\n      )}\r\n      <Modal\r\n        show={open}\r\n        onCancel={handleCloseInfo}\r\n        header={\"Trader Login Details\"}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <Button\r\n            type=\"button\"\r\n            onClick={handleCloseInfo}\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n          >\r\n            CLOSE\r\n          </Button>\r\n        }\r\n      >\r\n        <div className=\"message-container\">\r\n          <div className=\"message-text\">\r\n            {traderInfo && traderInfo.username}\r\n          </div>\r\n          <div className=\"message-text\">\r\n            {traderInfo && traderInfo.password}\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Trader;\r\n","import React, {\r\n  useMemo,\r\n  useState,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport \"./TradersList.css\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Trader from \"../item/Trader\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { MAIN_URL } from \"../../shared/util/config\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst TradersList = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const renderAfterCalled = useRef(false);\r\n  const renderAfterCalledFP = useRef(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [openP, setOpenP] = useState(false);\r\n  const [traderId, setTraderId] = useState();\r\n  const [loadedTraders, setLoadedTraders] = useState([]);\r\n  const [traderData, setTraderData] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [totalRowsP, setTotalRowsP] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [loadedProducts, setLoadedProducts] = useState([]);\r\n  const [manfProducts, setManfProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const subHeader = true;\r\n  const subHeaderComponent = (\r\n    <div className=\"header-cont\">\r\n      <div className=\"sub-header\"></div>\r\n      <div className=\"last-column\">Pharmacopoeias</div>\r\n    </div>\r\n  );\r\n\r\n  const fetchTraders = useCallback(\r\n    async (page) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await sendRequest(\r\n          `${MAIN_URL}/api/traders/manufacturer/${auth.userId}?page=${page}&size=${perPage}&delay=1`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Bearer \" + auth.token }\r\n        );\r\n        setLoadedTraders(response.traders);\r\n        setTotalRows(response.total);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    [perPage, sendRequest, auth]\r\n  );\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/api/traders/manufacturer/${auth.userId}?page=${page}&size=${perPage}&delay=1`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setLoadedProducts(response.products);\r\n      setPerPage(newPerPage);\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    fetchTraders(page);\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleEditButtonClick = useCallback((data) => {\r\n    setOpen(true);\r\n    setTraderData(JSON.parse(data.target.value));\r\n  }, []);\r\n\r\n  const handleDeleteButtonClick = useCallback(\r\n    async (data) => {\r\n      let id = JSON.parse(data.target.value).id;\r\n      try {\r\n        if (id) {\r\n          await sendRequest(`${MAIN_URL}/api/traders/${id}`, \"DELETE\", null, {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          });\r\n          fetchTraders(1);\r\n        }\r\n      } catch (err) {}\r\n    },\r\n    [sendRequest, auth, fetchTraders]\r\n  );\r\n\r\n  const fetchProducts = useCallback(\r\n    async (page) => {\r\n      if (traderId) {\r\n        try {\r\n          const response = await sendRequest(\r\n            `${MAIN_URL}/api/products/trader/id?uid=${traderId}&page=${page}&size=${perPage}&delay=1`,\r\n            \"GET\",\r\n            null,\r\n            { Authorization: \"Bearer \" + auth.token }\r\n          );\r\n          setLoadedProducts(response.products);\r\n          setTotalRowsP(response.total);\r\n          setLoading(false);\r\n          setOpenP(true);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    },\r\n    [traderId, auth.token, perPage, sendRequest]\r\n  );\r\n\r\n  const fetchProductsManf = useCallback(\r\n    async (page) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await sendRequest(\r\n          `${MAIN_URL}/api/products/manufacturer/id?uid=${auth.userId}&page=${page}&size=${perPage}&delay=1`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Bearer \" + auth.token }\r\n        );\r\n        setManfProducts(response.products);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    [perPage, sendRequest, auth]\r\n  );\r\n\r\n  const handleOpenP = useCallback(\r\n    async (trader) => {\r\n      setTraderId(trader.id);\r\n      setLoading(true);\r\n      fetchProducts(1);\r\n    },\r\n    [fetchProducts]\r\n  );\r\n\r\n  const handlePerRowsChangeP = async (newPerPage, page) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/api/products/trader/id?uid=${traderId}&page=${page}&size=${perPage}&delay=1`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setLoadedProducts(response.products);\r\n      setPerPage(newPerPage);\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handlePageChangeP = (page) => {\r\n    fetchProducts(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts(1);\r\n  }, [traderId, fetchProducts]);\r\n\r\n  const handleOpen = (trader, e) => {\r\n    e.preventDefault();\r\n    setTraderData(trader);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseP = () => {\r\n    setOpenP(false);\r\n  };\r\n\r\n  const handleProductsDetailButtonClick = useCallback(\r\n    (data) => {\r\n      handleOpenP(JSON.parse(data.target.value));\r\n    },\r\n    [handleOpenP]\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"SN\",\r\n        selector: (row) => row.serialNo,\r\n        width: \"60px\",\r\n      },\r\n      {\r\n        cell: (row) => (\r\n          <button onClick={handleEditButtonClick} value={JSON.stringify(row)}>\r\n            Edit\r\n          </button>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n        name: \"Action\",\r\n      },\r\n      {\r\n        cell: (row) => (\r\n          <button onClick={handleDeleteButtonClick} value={JSON.stringify(row)}>\r\n            Delete\r\n          </button>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n        name: \"Action\",\r\n      },\r\n      {\r\n        name: \"Trader\",\r\n        selector: (row) => row.title,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"200px\",\r\n      },\r\n      {\r\n        name: \"Email\",\r\n        selector: (row) => row.email,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"200px\",\r\n      },\r\n      {\r\n        name: \"Address\",\r\n        selector: (row) => row.address,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"Products\",\r\n        cell: (row) => {\r\n          if (row.products) {\r\n            return (\r\n              <button\r\n                onClick={handleProductsDetailButtonClick}\r\n                value={JSON.stringify(row)}\r\n              >\r\n                {\" \"}\r\n                Products{\" \"}\r\n              </button>\r\n            );\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"250px\",\r\n      },\r\n    ],\r\n    [\r\n      handleProductsDetailButtonClick,\r\n      handleDeleteButtonClick,\r\n      handleEditButtonClick,\r\n    ]\r\n  );\r\n\r\n  const columnsP = useMemo(\r\n    () => [\r\n      {\r\n        name: \"SN\",\r\n        selector: (row) => row.serialNo,\r\n        width: \"60px\",\r\n      },\r\n      {\r\n        name: \"Product\",\r\n        selector: (row) => row.title,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"200px\",\r\n      },\r\n      {\r\n        name: \"Description\",\r\n        selector: (row) => row.description,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"200px\",\r\n      },\r\n      {\r\n        name: \"Price\",\r\n        selector: (row) => row.price,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"COA\",\r\n        cell: (row) => {\r\n          if (row.coa) {\r\n            return \"Yes\";\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"MSDS\",\r\n        cell: (row) => {\r\n          if (row.msds) {\r\n            return \"Yes\";\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"CEP\",\r\n        cell: (row) => {\r\n          if (row.cep) {\r\n            return \"Yes\";\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"QOS\",\r\n        cell: (row) => {\r\n          if (row.qos) {\r\n            return \"Yes\";\r\n          } else {\r\n            return \"NA\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"DMF\",\r\n        cell: (row) => {\r\n          if (JSON.parse(JSON.stringify(row.dmf).length > 0)) {\r\n            let dmfHTML = JSON.parse(row.dmf).map((data) => data.label);\r\n            dmfHTML = dmfHTML.map((data, index) => (\r\n              <div key={index}>{data}</div>\r\n            ));\r\n            dmfHTML = (\r\n              <div className=\"list-dmf-container scroller\">{dmfHTML}</div>\r\n            );\r\n            return dmfHTML;\r\n          } else {\r\n            return \"No\";\r\n          }\r\n        },\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        name: \"IP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"IP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"BP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"BP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"EP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"EP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"JP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"JP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"USP\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\"USP\")\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n      {\r\n        name: \"In House\",\r\n        cell: (row) => {\r\n          if (\r\n            JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes(\r\n              \"InHouse\"\r\n            )\r\n          ) {\r\n            return (\r\n              <span className=\"check\" role=\"img\" aria-label=\"check\">\r\n                {\" \"}\r\n                &#10004;{\" \"}\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"cross\" role=\"img\" aria-label=\"cross\">\r\n                {\" \"}\r\n                &#x274C;{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        },\r\n        width: \"15px\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!renderAfterCalled.current) {\r\n      fetchTraders(1);\r\n    }\r\n    renderAfterCalled.current = true;\r\n  }, [fetchTraders]);\r\n\r\n  useEffect(() => {\r\n    if (!renderAfterCalledFP.current) {\r\n      fetchProductsManf(1);\r\n    }\r\n    renderAfterCalledFP.current = true;\r\n  }, [fetchProductsManf]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      fetchTraders(1);\r\n    }\r\n  }, [open, fetchTraders]);\r\n\r\n  if (manfProducts.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"place-list center\">\r\n          <Card className=\"card-product\">\r\n            <h2>\r\n              No Products found. Please add products first and then add Trader\r\n            </h2>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  if (loadedTraders && loadedTraders.length === 0 && manfProducts.length > 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"place-list center\">\r\n          <Card className=\"card-product\">\r\n            <h2>No traders found</h2>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={($event) => handleOpen(null, $event)}\r\n              normal=\"normal-button\"\r\n              buttonfont=\"button-font\"\r\n              maxwidth=\"max-width-fit-cont\"\r\n            >\r\n              Add Trader\r\n            </Button>\r\n            <Modal\r\n              show={open}\r\n              onCancel={handleClose}\r\n              header=\"Add Trader\"\r\n              contentClass=\"place-item__modal-content\"\r\n              footerClass=\"place-item__modal-actions abc\"\r\n              footer={\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  normal=\"normal-button\"\r\n                  buttonfont=\"button-font\"\r\n                  maxwidth=\"max-width-fit-cont\"\r\n                >\r\n                  CLOSE\r\n                </Button>\r\n              }\r\n            >\r\n              <div className=\"map-container\">\r\n                <Trader traderData={null} handleClose={handleClose}></Trader>\r\n              </div>\r\n            </Modal>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && (\r\n        <Card className=\"card-product place-list center\">\r\n          <Button\r\n            type=\"button\"\r\n            onClick={($event) => handleOpen(null, $event)}\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n          >\r\n            Add Trader\r\n          </Button>\r\n        </Card>\r\n      )}\r\n      {loadedTraders && !isLoading && (\r\n        <>\r\n          <DataTable\r\n            columns={columns}\r\n            data={loadedTraders}\r\n            progressPending={loading}\r\n            pagination\r\n            paginationServer\r\n            paginationTotalRows={totalRows}\r\n            onChangeRowsPerPage={handlePerRowsChange}\r\n            onChangePage={handlePageChange}\r\n          ></DataTable>\r\n          <Modal\r\n            show={open}\r\n            onCancel={handleClose}\r\n            header={(traderData && traderData.title) || \"Add Trader\"}\r\n            contentClass=\"place-item__modal-content\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={\r\n              <Button\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n                normal=\"normal-button\"\r\n                buttonfont=\"button-font\"\r\n                maxwidth=\"max-width-fit-cont\"\r\n              >\r\n                CLOSE\r\n              </Button>\r\n            }\r\n          >\r\n            <div className=\"map-container\">\r\n              <Trader\r\n                traderData={traderData}\r\n                handleClose={handleClose}\r\n              ></Trader>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n      <Modal\r\n        show={openP}\r\n        onCancel={handleCloseP}\r\n        header=\"Products\"\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions abc\"\r\n        footer={\r\n          <Button\r\n            type=\"button\"\r\n            onClick={handleCloseP}\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n          >\r\n            CLOSE\r\n          </Button>\r\n        }\r\n      >\r\n        <div className=\"map-container\">\r\n          <DataTable\r\n            columns={columnsP}\r\n            data={loadedProducts}\r\n            progressPending={loading}\r\n            pagination\r\n            paginationServer\r\n            paginationTotalRows={totalRowsP}\r\n            onChangeRowsPerPage={handlePerRowsChangeP}\r\n            onChangePage={handlePageChangeP}\r\n            paginationDefaultPage={currentPage}\r\n            paginationPerPage={perPage}\r\n            subHeaderComponent={subHeaderComponent}\r\n            subHeader={subHeader}\r\n          ></DataTable>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TradersList;\r\n","import React, {\r\n  useMemo,\r\n  useState,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./Admin.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { MAIN_URL } from \"../../shared/util/config\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\n\r\nconst DashboardAdmin = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const renderAfterCalled = useRef(false);\r\n  const renderAfterCalledFP = useRef(false);\r\n  const [loadedTraders, setLoadedTraders] = useState([]);\r\n  const [loadedManufacturers, setLoadedManufacturers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRowsTrader, setTotalRowsTrader] = useState(0);\r\n  const [totalRowsManufacturer, setTotalRowsManufacturer] = useState(0);\r\n  const [perPageM, setPerPageM] = useState(10);\r\n  const [currentPageM, setCurrentPageM] = useState(1);\r\n  const [perPageT, setPerPageT] = useState(10);\r\n  const [currentPageT, setCurrentPageT] = useState(1);\r\n  const [currentTab, setCurrentTab] = useState(\"manufacturers\");\r\n\r\n  const fetchTraders = useCallback(\r\n    async (page) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await sendRequest(\r\n          `${MAIN_URL}/api/users/traderslist?page=${page}&size=${perPageT}&delay=1`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Bearer \" + auth.token }\r\n        );\r\n        setLoadedTraders(response.traders);\r\n        setTotalRowsTrader(response.total);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    [perPageT, sendRequest, auth]\r\n  );\r\n\r\n  const fetchManufacturers = useCallback(\r\n    async (page) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await sendRequest(\r\n          `${MAIN_URL}/api/users/manufacturerslist?page=${page}&size=${perPageM}&delay=1`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Bearer \" + auth.token }\r\n        );\r\n        setLoadedManufacturers(response.manufacturers);\r\n        setTotalRowsManufacturer(response.total);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    [perPageM, sendRequest, auth]\r\n  );\r\n\r\n  const handlePerRowsChangeTrader = async (newPerPage, page) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/users/traderslist?page=${page}&size=${perPageT}&delay=1`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setLoadedTraders(response.traders);\r\n      setPerPageT(newPerPage);\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handlePageChangeTrader = (page) => {\r\n    fetchTraders(page);\r\n    setCurrentPageT(page);\r\n  };\r\n\r\n  const handleDeleteTraderButtonClick = useCallback(\r\n    async (data) => {\r\n      let id = JSON.parse(data.target.value).id;\r\n      try {\r\n        if (id) {\r\n          await sendRequest(`${MAIN_URL}/api/traders/${id}`, \"DELETE\", null, {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          });\r\n          fetchTraders(1);\r\n        }\r\n      } catch (err) {}\r\n    },\r\n    [sendRequest, auth, fetchTraders]\r\n  );\r\n\r\n  const handlePerRowsChangeManufacturer = async (newPerPage, page) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/users/manufacturerslist?page=${page}&size=${perPageM}&delay=1`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setLoadedManufacturers(response.manufacturers);\r\n      setPerPageM(newPerPage);\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handlePageChangeManufacturer = (page) => {\r\n    fetchManufacturers(page);\r\n    setCurrentPageM(page);\r\n  };\r\n\r\n  const handleDeleteManufacturerButtonClick = useCallback(\r\n    async (data) => {\r\n      let id = JSON.parse(data.target.value).id;\r\n      try {\r\n        if (id) {\r\n          await sendRequest(\r\n            `${MAIN_URL}/api/manufacturers/${id}`,\r\n            \"DELETE\",\r\n            null,\r\n            {\r\n              Authorization: \"Bearer \" + auth.token,\r\n            }\r\n          );\r\n          fetchManufacturers(1);\r\n        }\r\n      } catch (err) {}\r\n    },\r\n    [sendRequest, auth, fetchManufacturers]\r\n  );\r\n\r\n  const columnsTrader = useMemo(\r\n    () => [\r\n      {\r\n        name: \"SN\",\r\n        selector: (row) => row.serialNo,\r\n        width: \"60px\",\r\n      },\r\n      {\r\n        cell: (row) => (\r\n          <button\r\n            onClick={handleDeleteTraderButtonClick}\r\n            value={JSON.stringify(row)}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n        name: \"Action\",\r\n      },\r\n      {\r\n        name: \"Trader\",\r\n        selector: (row) => row.title,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n      {\r\n        name: \"Email\",\r\n        selector: (row) => row.email,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n      {\r\n        name: \"Address\",\r\n        selector: (row) => row.address,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n      {\r\n        name: \"Listing\",\r\n        selector: (row) => row.listing,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n    ],\r\n    [handleDeleteTraderButtonClick]\r\n  );\r\n\r\n  const columnsManufacturer = useMemo(\r\n    () => [\r\n      {\r\n        name: \"SN\",\r\n        selector: (row) => row.serialNo,\r\n        width: \"60px\",\r\n      },\r\n      {\r\n        cell: (row) => (\r\n          <button\r\n            onClick={handleDeleteManufacturerButtonClick}\r\n            value={JSON.stringify(row)}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: \"100px\",\r\n        name: \"Action\",\r\n      },\r\n      {\r\n        name: \"Manufacturer\",\r\n        selector: (row) => row.title,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n      {\r\n        name: \"Description\",\r\n        selector: (row) => row.description,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n      {\r\n        name: \"Address\",\r\n        selector: (row) => row.address,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n      {\r\n        name: \"Listing\",\r\n        selector: (row) => row.listing,\r\n        sortable: true,\r\n        right: true,\r\n        width: \"auto\",\r\n      },\r\n    ],\r\n    [handleDeleteManufacturerButtonClick]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!renderAfterCalled.current) {\r\n      fetchTraders(1);\r\n    }\r\n    renderAfterCalled.current = true;\r\n  }, [fetchTraders]);\r\n\r\n  useEffect(() => {\r\n    if (!renderAfterCalledFP.current) {\r\n      fetchManufacturers(1);\r\n    }\r\n    renderAfterCalledFP.current = true;\r\n  }, [fetchManufacturers]);\r\n\r\n  if (loadedManufacturers && loadedManufacturers.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card className=\"card-product\">\r\n          <h2>No Manufacturers found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loadedTraders && loadedTraders.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card className=\"card-product\">\r\n          <h2>No Traders found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function handleCurrentTab(presentTab) {\r\n    setCurrentTab(presentTab);\r\n    if (presentTab === \"manufacturers\") {\r\n      fetchManufacturers(1);\r\n    } else if (presentTab === \"traders\") {\r\n      fetchTraders(1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && (\r\n        <div className=\"tab-container\">\r\n          <Button onClick={() => handleCurrentTab(\"manufacturers\")}>\r\n            Manufacturers\r\n          </Button>\r\n          <Button onClick={() => handleCurrentTab(\"traders\")}>Traders</Button>\r\n        </div>\r\n      )}\r\n      {loadedManufacturers && !isLoading && currentTab === \"manufacturers\" && (\r\n        <>\r\n          <DataTable\r\n            columns={columnsManufacturer}\r\n            data={loadedManufacturers}\r\n            progressPending={loading}\r\n            pagination\r\n            paginationServer\r\n            paginationTotalRows={totalRowsManufacturer}\r\n            paginationDefaultPage={currentPageM}\r\n            paginationPerPage={perPageM}\r\n            onChangeRowsPerPage={handlePerRowsChangeManufacturer}\r\n            onChangePage={handlePageChangeManufacturer}\r\n          ></DataTable>\r\n        </>\r\n      )}\r\n      {loadedTraders && !isLoading && currentTab === \"traders\" && (\r\n        <>\r\n          <DataTable\r\n            columns={columnsTrader}\r\n            data={loadedTraders}\r\n            progressPending={loading}\r\n            pagination\r\n            paginationServer\r\n            paginationTotalRows={totalRowsTrader}\r\n            paginationDefaultPage={currentPageT}\r\n            paginationPerPage={perPageT}\r\n            onChangeRowsPerPage={handlePerRowsChangeTrader}\r\n            onChangePage={handlePageChangeTrader}\r\n          ></DataTable>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardAdmin;\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./Manufacturer.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { MAIN_URL } from \"../../shared/util/config\";\r\n\r\nconst DashboardManufacturer = (props) => {\r\n  const [manufacturerData, setManufacturerData] = useState();\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const manufacturerDashboardSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = {\r\n        title: formState.inputs.title.value,\r\n        description: formState.inputs.description.value,\r\n        address: formState.inputs.address.value,\r\n      };\r\n      if (manufacturerData && manufacturerData.id) {\r\n        await sendRequest(\r\n          `${MAIN_URL}/api/manufacturers/${manufacturerData.id}`,\r\n          \"PATCH\",\r\n          JSON.stringify(formData),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n      } else {\r\n        await sendRequest(\r\n          `${MAIN_URL}/api/manufacturers/create`,\r\n          \"POST\",\r\n          JSON.stringify(formData),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        ).then((data) => {\r\n          setManufacturerData(data.manufacturer);\r\n        });\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  const fetchManufacturerDashboardData = useCallback(async () => {\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/api/manufacturers/${auth.userId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      if (response.manufacturer) {\r\n        setManufacturerData(response.manufacturer[0]);\r\n      }\r\n    } catch (err) {}\r\n  }, [auth.token, auth.userId, sendRequest]);\r\n\r\n  useEffect(() => {\r\n    if (auth.userId) {\r\n      fetchManufacturerDashboardData();\r\n    }\r\n  }, [fetchManufacturerDashboardData, auth.userId]);\r\n\r\n  const [formState, inputHandler] = useForm({\r\n    title: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    address: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && (\r\n        <form\r\n          className=\"place-form\"\r\n          onSubmit={manufacturerDashboardSubmitHandler}\r\n        >\r\n          <Input\r\n            key={manufacturerData && manufacturerData.title + \"title\"}\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={manufacturerData && manufacturerData.title}\r\n          />\r\n          <Input\r\n            key={\r\n              manufacturerData && manufacturerData.description + \"description\"\r\n            }\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"description\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a description.\"\r\n            onInput={inputHandler}\r\n            initialValue={manufacturerData && manufacturerData.description}\r\n          />\r\n          <Input\r\n            key={manufacturerData && manufacturerData.address + \"address\"}\r\n            id=\"address\"\r\n            element=\"address\"\r\n            label=\"address\"\r\n            errorText=\"Please enter a address.\"\r\n            onInput={inputHandler}\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            initialValue={manufacturerData && manufacturerData.address}\r\n          />\r\n\r\n          <div className=\"height25\"></div>\r\n          <Button\r\n            type=\"submit\"\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n            disabled={!formState.isValid}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardManufacturer;\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./Trader.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { MAIN_URL } from \"../../shared/util/config\";\r\n\r\nconst DashboardTrader = (props) => {\r\n  const [traderData, setTraderData] = useState();\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const TraderDashboardSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = {\r\n        title: formState.inputs.title.value,\r\n        description: formState.inputs.description.value,\r\n        address: formState.inputs.address.value,\r\n      };\r\n      if (traderData && traderData.id) {\r\n        await sendRequest(\r\n          `${MAIN_URL}/api/traders/updateTraderDetails//${traderData.id}`,\r\n          \"PATCH\",\r\n          JSON.stringify(formData),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n      } else {\r\n        await sendRequest(\r\n          `${MAIN_URL}/api/traders/createTraderDetails`,\r\n          \"POST\",\r\n          JSON.stringify(formData),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        ).then((data) => {\r\n          setTraderData(data.traderDashboard);\r\n        });\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  const fetchTraderDashboardData = useCallback(async () => {\r\n    try {\r\n      const response = await sendRequest(\r\n        `${MAIN_URL}/api/traders/traderDashboardData/${auth.userId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      if (response.trader) {\r\n        setTraderData(response.trader[0]);\r\n      }\r\n    } catch (err) {}\r\n  }, [auth.token, auth.userId, sendRequest]);\r\n\r\n  useEffect(() => {\r\n    if (auth.userId) {\r\n      fetchTraderDashboardData();\r\n    }\r\n  }, [fetchTraderDashboardData, auth.userId]);\r\n\r\n  const [formState, inputHandler] = useForm({\r\n    title: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    address: {\r\n      value: null,\r\n      isValid: true,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && (\r\n        <form className=\"place-form\" onSubmit={TraderDashboardSubmitHandler}>\r\n          <Input\r\n            key={traderData && traderData.title + \"title\"}\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={traderData && traderData.title}\r\n          />\r\n          <Input\r\n            key={traderData && traderData.description + \"description\"}\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"description\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a description.\"\r\n            onInput={inputHandler}\r\n            initialValue={traderData && traderData.description}\r\n          />\r\n          <Input\r\n            key={traderData && traderData.address + \"address\"}\r\n            id=\"address\"\r\n            element=\"address\"\r\n            label=\"address\"\r\n            errorText=\"Please enter a address.\"\r\n            onInput={inputHandler}\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            initialValue={traderData && traderData.address}\r\n          />\r\n\r\n          <div className=\"height25\"></div>\r\n          <Button\r\n            type=\"submit\"\r\n            normal=\"normal-button\"\r\n            buttonfont=\"button-font\"\r\n            maxwidth=\"max-width-fit-cont\"\r\n            disabled={!formState.isValid}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardTrader;\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport ProductsList from \"./products/list/ProductsList\";\nimport TradersList from \"./traders/list/TradersList\";\nimport DashboardAdmin from \"./dashboard/admin/Admin\";\nimport DashboardManufacturer from \"./dashboard/manufacturer/Manufacturer\";\nimport DashboardTrader from \"./dashboard/trader/Trader\";\n\nconst App = () => {\n  const {\n    token,\n    login,\n    logout,\n    userId,\n    userName,\n    email,\n    mobileNo,\n    role,\n    image,\n  } = useAuth();\n\n  const [currentTokenState, setCurrentTokenState] = useState(false);\n\n  useEffect(() => {\n    setCurrentTokenState(token);\n  }, [token]);\n\n  let routes;\n  if (currentTokenState) {\n    routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => {\n            if (role) {\n              if (role === \"Manufacturer\") {\n                return <Redirect to=\"/dashboardManufacturer\" />;\n              } else if (role === \"Admin\") {\n                return <Redirect to=\"/dashboardAdmin\" />;\n              } else if (role === \"Trader\") {\n                return <Redirect to=\"/dashboardTrader\" />;\n              }\n            }\n          }}\n        ></Route>\n        <Route path=\"/dashboardAdmin\" exact>\n          <DashboardAdmin />\n        </Route>\n        <Route path=\"/dashboardManufacturer\" exact>\n          <DashboardManufacturer />\n        </Route>\n        <Route path=\"/dashboardTrader\" exact>\n          <DashboardTrader />\n        </Route>\n        <Route path=\"/products\" exact>\n          <ProductsList />\n        </Route>\n        <Route path=\"/traders\" exact>\n          <TradersList />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/*\" exact>\n          <Auth />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        userName: userName,\n        email: email,\n        mobileNo: mobileNo,\n        login: login,\n        logout: logout,\n        role: role,\n        image: image,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import { useState, useCallback, useEffect } from \"react\";\n\n// let logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  // const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [userName, setUserName] = useState();\n  const [email, setEmail] = useState();\n  const [mobileNo, setMobileNo] = useState();\n  const [role, setRole] = useState();\n  const [image, setImage] = useState();\n\n  const login = useCallback(\n    (uid, token, username, mobileNo, role, email, image, expirationDate) => {\n      setToken(token);\n      setUserId(uid);\n      setUserName(username);\n      setMobileNo(mobileNo);\n      setEmail(email);\n      setRole(role);\n      setImage(image);\n      // const tokenExpirationDate =\n      //   expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n      // setTokenExpirationDate(tokenExpirationDate);\n      localStorage.setItem(\n        \"userData\",\n        JSON.stringify({\n          userId: uid,\n          token: token,\n          userName: username,\n          mobileNo: mobileNo,\n          role: role,\n          // expiration: tokenExpirationDate.toISOString(),\n          email: email,\n          image: image,\n        })\n      );\n    },\n    []\n  );\n\n  const logout = useCallback(() => {\n    setToken(null);\n    // setTokenExpirationDate(null);\n    setUserId(null);\n    setUserName(null);\n    setMobileNo(null);\n    setRole(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  // useEffect(() => {\n  //   if (token && tokenExpirationDate) {\n  //     const remainingTime =\n  //       tokenExpirationDate.getTime() - new Date().getTime();\n  //     logoutTimer = setTimeout(logout, remainingTime);\n  //   } else {\n  //     clearTimeout(logoutTimer);\n  //   }\n  // }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token\n      // &&  new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        storedData.userName,\n        storedData.mobileNo,\n        storedData.role,\n        storedData.email,\n        storedData.image\n        // new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return {\n    token,\n    login,\n    logout,\n    userId,\n    userName,\n    email,\n    mobileNo,\n    role,\n    image,\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}